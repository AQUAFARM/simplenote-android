
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.5.+'
    }
}

apply plugin: 'android'

repositories {
    mavenCentral()
}

dependencies {
    // compile 'com.android.support:support-v4:13.0.+'
    compile project(":libraries:Simperium:Simperium")
    compile fileTree(dir:"libs", include:"*.jar")
}

android {
    compileSdkVersion 18
    buildToolsVersion "18.0.0"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 18
    }

}

// Generates the Config.java class using properties defined in gradle.properties
// or by other means provided by Gradle
task simplenoteConfig(group: "build", description: "Generate Config class") {
    def dir = "${buildDir}/source/simplenote"
    def file = new File(dir, "com/automattic/simplenote/Config.java")
    android {
        sourceSets {
            main {
                java {
                    srcDir dir
                }
            }
        }
    }
    outputs.file file
    doLast {
        file.getParentFile().mkdirs()
        def writer = new FileWriter(file)
        writer.write("""/* auto-generated file do not modify */
package com.automattic.simplenote;

public final class Config {

    public static final String simperium_app_id = "${simperiumAppId}";
    public static final String simperium_app_key = "${simperiumAppKey}";
    public static final String hockey_app_id = "${hockeyAppId}";

}
""")
        writer.close()
    }
}

// Add the simplenoteConfig task to every flavor's compile tasks
android.buildTypes.all { buildType ->
    def name = "compile${buildType.name.capitalize()}"
    tasks.whenTaskAdded { task ->
        if (task.name == name) {
            task.dependsOn(simplenoteConfig)
            task.mustRunAfter(simplenoteConfig)
        }
    }
}
if(["storeFile", "storePassword", "keyAlias", "keyPassword"].count { !project.hasProperty(it) } == 0 ){
    android {
      signingConfigs {
          release {
              storeFile = file(project.storeFile)
              storePassword = project.storePassword
              keyAlias = project.keyAlias
              keyPassword = project.keyPassword
          }
      }
    }
    android.buildTypes.release.signingConfig = android.signingConfigs.release
}

